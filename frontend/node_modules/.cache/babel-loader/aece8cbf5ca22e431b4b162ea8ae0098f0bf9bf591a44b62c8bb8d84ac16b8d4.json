{"ast":null,"code":"var _jsxFileName = \"/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: DataTransfer.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", true);\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Count not fetch details for selected events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","params","useParams","children","event","DataTransfer","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData,json } from \"react-router-dom\"\n\nimport EventItem from '../components/EventItem'\n\nfunction EventDetailPage() {\n    const params = useParams()\n    return (\n      <>\n      <EventItem event={DataTransfer.event}></EventItem>\n      </>\n    )\n  }\n  \n  export default EventDetailPage\n\n\n  export async function loader({request, params}) {\n\n    const id = params.eventId\n    const response = await fetch('http://localhost:8080/events/' + id)\n    if (!response.ok){\n      throw json({message: 'Count not fetch details for selected events'},{status:500})\n    }\n    else{\n      return response\n    }\n  }"],"mappings":";;AAAA,SAASA,aAAa,EAACC,IAAI,QAAQ,kBAAkB;AAErD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGC,SAAS,EAAE;EAC1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACAP,OAAA,CAACF,SAAS;MAACU,KAAK,EAAEC,YAAY,CAACD;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAa,iBAC/C;AAEP;AAACT,EAAA,CAPMD,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAStB,eAAeA,eAAe;AAG9B,OAAO,eAAeY,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEZ;EAAM,CAAC,GAAAW,IAAA;EAE5C,MAAME,EAAE,GAAGb,MAAM,CAACc,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAC;IACf,MAAMzB,IAAI,CAAC;MAAC0B,OAAO,EAAE;IAA6C,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACnF,CAAC,MACG;IACF,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}