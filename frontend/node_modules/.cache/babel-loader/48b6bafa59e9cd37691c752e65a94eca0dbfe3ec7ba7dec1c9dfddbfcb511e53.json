{"ast":null,"code":"var _jsxFileName = \"/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport NewEventPage from './pages/NewEvent';\n\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  elements: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this)\n}, {\n  path: '/events',\n  elements: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 31\n  }, this)\n}, {\n  path: '/events/:id',\n  elements: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 35\n  }, this)\n}, {\n  path: '/events/new',\n  elements: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 35\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","NewEventPage","jsxDEV","_jsxDEV","router","path","elements","fileName","_jsxFileName","lineNumber","columnNumber","EventsPage","EventDetailPage","App","_c","$RefreshReg$"],"sources":["/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {RouterProvider, createBrowserRouter} from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport NewEventPage from './pages/NewEvent';\n\n\n//\n\nconst router = createBrowserRouter([\n  {path: '/', elements: <HomePage></HomePage>},\n  {path: '/events', elements: <EventsPage></EventsPage>},\n  {path: '/events/:id', elements: <EventDetailPage></EventDetailPage>},\n  {path: '/events/new', elements: <NewEventPage></NewEventPage>},\n])\n\nfunction App() {\n  return <div></div>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,YAAY,MAAM,kBAAkB;;AAG3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGL,mBAAmB,CAAC,CACjC;EAACM,IAAI,EAAE,GAAG;EAAEC,QAAQ,eAAEH,OAAA,CAACH,QAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAY,CAAC,EAC5C;EAACL,IAAI,EAAE,SAAS;EAAEC,QAAQ,eAAEH,OAAA,CAACQ,UAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAc,CAAC,EACtD;EAACL,IAAI,EAAE,aAAa;EAAEC,QAAQ,eAAEH,OAAA,CAACS,eAAe;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAmB,CAAC,EACpE;EAACL,IAAI,EAAE,aAAa;EAAEC,QAAQ,eAAEH,OAAA,CAACF,YAAY;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAgB,CAAC,CAC/D,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAW;AACpB;AAACI,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}