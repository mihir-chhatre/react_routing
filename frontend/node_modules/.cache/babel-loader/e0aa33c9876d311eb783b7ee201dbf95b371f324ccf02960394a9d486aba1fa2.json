{"ast":null,"code":"var _jsxFileName = \"/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport EditEventPage from './pages/EditEvent';\nimport HomePage from './pages/Home';\nimport NewEventPage from './pages/NewEvent';\nimport EventsPage from './pages/Events';\nimport EventDetailPage from './pages/EventDetail';\n\n// why wouldn't the path - '/events/new' trigger the path definition for '/events/:id'? \n// React is smart and understands /events/new is specific and hence prefers its definition any time the path is accessed (rather than the route definition of /events/:id)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  elements: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this)\n}\n//{path: '/events', elements: <EventsPage></EventsPage>},\n//{path: '/events/:eventId', elements: <EventDetailPage></EventDetailPage>},\n//{path: '/events/new', elements: <NewEventPage></NewEventPage>},\n//{path: '/events/:eventId/edit', elements: <EditEventPage></EditEventPage>}\n]);\n\n// function App() {\n//   return <RouterProvider router={router} />;\n// }\n\n// export default App;\n\n//import { createBrowserRouter, RouterProvider } from 'react-router-dom';\n\n//import HomePage from './pages/Home';","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEventPage","HomePage","NewEventPage","EventsPage","EventDetailPage","jsxDEV","_jsxDEV","router","path","elements","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {RouterProvider, createBrowserRouter} from 'react-router-dom';\n\nimport EditEventPage from './pages/EditEvent';\nimport HomePage from './pages/Home';\nimport NewEventPage from './pages/NewEvent';\nimport EventsPage from './pages/Events';\nimport EventDetailPage from './pages/EventDetail';\n\n// why wouldn't the path - '/events/new' trigger the path definition for '/events/:id'? \n// React is smart and understands /events/new is specific and hence prefers its definition any time the path is accessed (rather than the route definition of /events/:id)\n\nconst router = createBrowserRouter([\n  {path: '/', elements: <HomePage />},\n  //{path: '/events', elements: <EventsPage></EventsPage>},\n  //{path: '/events/:eventId', elements: <EventDetailPage></EventDetailPage>},\n  //{path: '/events/new', elements: <NewEventPage></NewEventPage>},\n  //{path: '/events/:eventId/edit', elements: <EditEventPage></EditEventPage>}\n])\n\n\n// function App() {\n//   return <RouterProvider router={router} />;\n// }\n\n// export default App;\n\n\n\n\n//import { createBrowserRouter, RouterProvider } from 'react-router-dom';\n\n//import HomePage from './pages/Home';\n\n\n\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AAEpE,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,eAAe,MAAM,qBAAqB;;AAEjD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,CACjC;EAACS,IAAI,EAAE,GAAG;EAAEC,QAAQ,eAAEH,OAAA,CAACL,QAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;AAClC;AACA;AACA;AACA;AAAA,CACD,CAAC;;AAGF;AACA;AACA;;AAEA;;AAKA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}