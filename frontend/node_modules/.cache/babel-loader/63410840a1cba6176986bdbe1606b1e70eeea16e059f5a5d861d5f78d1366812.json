{"ast":null,"code":"var _jsxFileName = \"/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { defer, json, useLoaderData, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message: 'Count not fetch events'}), {status: 500})\n    throw json({\n      message: \"Count not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","defer","json","useLoaderData","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","fileName","_jsxFileName","lineNumber","columnNumber","children","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/mihirchhatre/Documents/Projects/react_routing/frontend/src/pages/Events.js"],"sourcesContent":["import { Suspense } from \"react\";\nimport { defer, json, useLoaderData, Await } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  return (\n    <Suspense fallback={<p></p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents}></EventsList>}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message: 'Count not fetch events'}), {status: 500})\n    throw json(\n      {\n        message: \"Count not fetch events\",\n      },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n}\n\nexport function loader() {\n  defer({\n    events: loadEvents(),\n  });\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,EAAEC,IAAI,EAAEC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGP,aAAa,EAAE;EAElC,oBACEI,OAAA,CAACP,QAAQ;IAACW,QAAQ,eAAEJ,OAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;IAAAC,QAAA,eAC1BT,OAAA,CAACH,KAAK;MAACa,OAAO,EAAEP,MAAO;MAAAM,QAAA,EACnBE,YAAY,iBAAKX,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEQ;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAc;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEf;AAACN,EAAA,CAVQD,UAAU;EAAA,QACEL,aAAa;AAAA;AAAAgB,EAAA,GADzBX,UAAU;AAYnB,eAAeA,UAAU;AAEzB,eAAeY,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,MAAMrB,IAAI,CACR;MACEsB,OAAO,EAAE;IACX,CAAC,EACD;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvBzB,KAAK,CAAC;IACJS,MAAM,EAAEU,UAAU;EACpB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}